{"version":3,"sources":["components/TitleBar/TitleBar.js","components/CommandButtons/CommandButtons.js","components/utils.js","components/CommandButtons/AddCommand.js","components/App/App.js","index.js"],"names":["TitleBar","useState","data","setData","useEffect","fetch","then","response","json","interval","setInterval","clearInterval","className","style","display","alignItems","gap","gridTemplateColumns","src","id","avatarId","alt","width","height","username","code","checkPresence","presence","type","name","status","checkStatusCode","upTime","CommandButtons","uiButtons","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","transition","Slide","sendCommand","command","a","postData","apiKey","method","headers","body","JSON","stringify","string","charAt","toUpperCase","slice","toLowerCase","removeButton","renderedButtons","map","item","index","key","onClick","foo","AddCommand","commandName","setCommandName","setCommand","handleSubmit","event","preventDefault","onSubmit","padding","border","fontSize","backgroundColor","color","textAlign","placeholder","value","required","onChange","e","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2d27845.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst TitleBar = () => {\n  const [data, setData] = useState(null)\n  useEffect(() => {\n    fetch('/api/info')\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data)\n      })\n    const interval = setInterval(() => {\n      fetch('/api/info')\n        .then((response) => response.json())\n        .then((data) => {\n          setData(data)\n        })\n    }, 2000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const checkStatusCode = (status) => {\n    switch (status) {\n      case 0:\n        return 'Ready'\n      case 1:\n        return 'Connecting'\n      case 2:\n        return 'Reconnecting'\n      case 3:\n        return 'Idle'\n      case 4:\n        return 'Nearly'\n      case 5:\n        return 'Disconnected'\n      default:\n        break\n    }\n  }\n  const checkPresence = (code) => {\n    switch (code) {\n      case 0:\n        return 'Playing'\n      case 1:\n        return 'Streaming'\n      case 2:\n        return 'Listening'\n      case 3:\n        return 'Watching'\n      default:\n        break\n    }\n  }\n  return (\n    <div className=\"TitleBar\">\n      <div\n        style={{\n          display: 'grid',\n          alignItems: 'center',\n          gap: '10px',\n          gridTemplateColumns: 'auto auto'\n        }}\n      >\n        <img\n          src={data ? `https://cdn.discordapp.com/avatars/${data.id}/${data.avatarId}.png` : ''}\n          alt=\"..\"\n          style={{ width: '48px', height: '48px' }}\n        />\n        <span>\n          {data\n            ? `${data.username} - ${checkPresence(data.presence.type)} ${data.presence.name}`\n            : '..'}\n        </span>\n      </div>\n      <div\n        style={{\n          display: 'grid',\n          alignItems: 'center',\n          gap: '10px',\n          gridTemplateColumns: 'auto auto'\n        }}\n      >\n        <span>{data ? checkStatusCode(data.status) : '..'}</span>\n        <span>{data ? data.upTime : '..'}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default TitleBar\n","import React, { useEffect, useState } from 'react'\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport { capitalize } from '../utils'\nimport { ToastContainer, toast, Slide } from 'react-toastify'\nimport '../../../node_modules/react-toastify/dist/ReactToastify.css'\n\nconst CommandButtons = () => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    fetch('/ui/db')\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data.uiButtons)\n      })\n  }, [])\n\n  const notify = (message) =>\n    toast(message, {\n      position: 'bottom-center',\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      className: 'toast',\n      transition: Slide\n    })\n  /*\nconst lightSlider = async (command, value) => {\n  try {\n    const data = await sendCommand(`${command} ${value}`)\n    return notify(data.response)\n  } catch (error) {\n    console.log(error)\n  }\n}\n*/\n  const sendCommand = async (command) => {\n    const postData = {\n      apiKey: 284695,\n      command: command\n    }\n    try {\n      const response = await fetch('/api/commands', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(postData)\n      })\n      const data = await response.json()\n      return notify(capitalize(data.response))\n    } catch {\n      return notify('There was an error connecting.')\n    }\n  }\n  const removeButton = async (id) => {\n    await fetch(`http://127.0.0.1:5700/ui/db/rm/${id}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    })\n    setData(null)\n  }\n\n  const renderedButtons = data\n    ? data.map((item, index) => {\n        const { id, name, command } = item\n        return (\n          <div key={index}>\n            <ContextMenuTrigger id={id}>\n              <button className=\"apiButton\" onClick={async () => await sendCommand(command)}>\n                {name}\n              </button>\n            </ContextMenuTrigger>\n            <ContextMenu id={id}>\n              <MenuItem data={{ foo: 'bar' }} onClick={async () => await removeButton(id)}>\n                Delete\n              </MenuItem>\n            </ContextMenu>\n          </div>\n        )\n      })\n    : 'No shortcut commands set. Please add one above.'\n\n  return (\n    <div className=\"apiButtons\">\n      {renderedButtons}\n\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default CommandButtons\n","const capitalize = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n}\n\nconst sendCommand = async (command) => {\n  console.log(command)\n  const postData = {\n    apiKey: 284695,\n    command: command\n  }\n  try {\n    const response = await fetch('http://10.0.0.7:5700/api', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(postData)\n    })\n    const data = await response.json()\n    return data\n    //M.toast({ html: capitalize(data.response), classes: 'toastNotification' })\n  } catch {\n    //M.toast({ html: 'There was an error connecting.', classes: 'toastNotification' })\n  }\n}\n\nconst lightSlider = async (value) => {\n  await sendCommand(`lamp desk ${value}`)\n  console.log(value)\n}\n\nexport { capitalize, sendCommand, lightSlider }\n","import React, { useState } from 'react'\n\nconst AddCommand = () => {\n  const [commandName, setCommandName] = useState()\n  const [command, setCommand] = useState()\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    fetch('/ui/db', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify([commandName, command])\n    })\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      style={{\n        display: 'grid',\n        padding: '10px',\n        gap: '5px',\n        gridTemplateColumns: '200px 200px 50px'\n      }}\n    >\n      <input\n        type=\"text\"\n        style={{\n          width: '200px',\n          border: 'none',\n          fontSize: '0.7rem',\n          backgroundColor: '#3E4245',\n          color: '#757163',\n          textAlign: 'center',\n          height: '20px'\n        }}\n        placeholder=\"Name\"\n        name=\"commandName\"\n        value={commandName}\n        required={true}\n        onChange={(e) => setCommandName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        style={{\n          width: '200px',\n          border: 'none',\n          fontSize: '0.7rem',\n          backgroundColor: '#3E4245',\n          color: '#757163',\n          textAlign: 'center',\n          height: '20px'\n        }}\n        placeholder=\"Command\"\n        name=\"command\"\n        value={command}\n        required={true}\n        onChange={(e) => setCommand(e.target.value)}\n      />\n      <input\n        type=\"submit\"\n        style={{\n          border: 'none',\n          fontSize: '0.7rem',\n          padding: '0px 5px',\n          backgroundColor: '#3E4245',\n          color: '#757163',\n          height: '20px'\n        }}\n        value=\"Add\"\n      />\n    </form>\n  )\n}\n\nexport default AddCommand\n","import React from 'react'\nimport TitleBar from '../TitleBar/TitleBar'\nimport CommandButtons from '../CommandButtons/CommandButtons'\nimport AddCommand from '../CommandButtons/AddCommand'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TitleBar />\n      <AddCommand />\n      <CommandButtons />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
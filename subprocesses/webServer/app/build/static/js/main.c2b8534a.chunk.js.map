{"version":3,"sources":["components/Utils.js","components/TitleBar/Settings/AddCommand.js","components/TitleBar/Settings/ApiKey.js","components/TitleBar/Settings/Settings.js","components/TitleBar/RunCommand.js","components/TitleBar/BotInfo.js","components/TitleBar/TitleBar.js","components/CommandButtons/CommandButtons.js","components/App/App.js","index.js"],"names":["notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","transition","Flip","sendCommand","command","a","apiKey","localStorage","getItem","fetch","method","headers","body","JSON","stringify","response","json","data","AddCommand","useState","commandName","setCommandName","setCommand","handleSubmit","e","preventDefault","autoComplete","onSubmit","style","display","gap","gridTemplateColumns","paddingBottom","type","border","fontSize","backgroundColor","color","textAlign","height","placeholder","name","value","required","onChange","target","padding","ApiKey","setApiKey","setItem","width","Settings","trigger","modal","close","justifyContent","borderBottom","cursor","onClick","RunCommand","BotInfo","setData","useEffect","then","interval","setInterval","clearInterval","alignItems","src","avatar","alt","username","status","checkStatusCode","upTime","TitleBar","CommandButtons","useGlobal","commandList","setCommandList","removeButton","id","renderedButtons","map","item","index","key","foo","App","closeButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2b8534a.chunk.js","sourcesContent":["import { toast, Flip } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst notify = (message) =>\n  toast(message, {\n    position: 'bottom-center',\n    autoClose: 4000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    className: 'toast',\n    transition: Flip\n  })\n\nconst sendCommand = async (command) => {\n  const apiKey = localStorage.getItem('apiKey') || ''\n  try {\n    const response = await fetch('/api/commands', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ apiKey, command })\n    })\n    const data = await response.json()\n    return notify(data.response)\n  } catch {\n    return notify('There was an error connecting.')\n  }\n}\n\nexport { notify, sendCommand }\n","import React, { useState } from 'reactn'\nimport { notify } from '../../Utils'\n\nconst AddCommand = () => {\n  const [commandName, setCommandName] = useState('')\n  const [command, setCommand] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    fetch('/api/db/ui', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify([commandName, command])\n    })\n    notify(`Added [ ${commandName} - ${command} ]`)\n    setCommand('')\n    setCommandName('')\n  }\n\n  return (\n    <div>\n      <form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        style={{\n          display: 'grid',\n          gap: '5px',\n          gridTemplateColumns: '125px 125px 50px',\n          paddingBottom: '5px'\n        }}\n      >\n        <input\n          type=\"text\"\n          style={{\n            border: 'none',\n            fontSize: '0.7rem',\n            backgroundColor: '#3E4245',\n            color: '#dfdfdf',\n            textAlign: 'center',\n            height: '35px'\n          }}\n          placeholder=\"Name\"\n          name=\"commandName\"\n          value={commandName}\n          required={true}\n          onChange={(e) => setCommandName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          style={{\n            border: 'none',\n            fontSize: '0.7rem',\n            backgroundColor: '#3E4245',\n            color: '#dfdfdf',\n            textAlign: 'center',\n            height: '35px'\n          }}\n          placeholder=\"Command\"\n          name=\"command\"\n          value={command}\n          required={true}\n          onChange={(e) => setCommand(e.target.value)}\n        />\n        <input\n          type=\"submit\"\n          style={{\n            border: 'none',\n            fontSize: '0.7rem',\n            padding: '0px 5px',\n            backgroundColor: '#3E4245',\n            color: '#757163',\n            height: '35px'\n          }}\n          value=\"+\"\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default AddCommand\n","import React, { useState } from 'reactn'\nimport { notify } from '../../Utils'\n\nconst ApiKey = () => {\n  const [apiKey, setApiKey] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    localStorage.setItem('apiKey', apiKey)\n    notify(`ApiKey set to [ ${apiKey} ]`)\n    setApiKey('')\n  }\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      style={{\n        display: 'grid',\n        gap: '5px',\n        gridTemplateColumns: '125px 50px'\n      }}\n    >\n      <input\n        type=\"text\"\n        style={{\n          width: '125px',\n          border: 'none',\n          fontSize: '0.7rem',\n          backgroundColor: '#3E4245',\n          color: '#dfdfdf',\n          textAlign: 'center',\n          height: '35px'\n        }}\n        placeholder=\"API KEY\"\n        name=\"apiKey\"\n        value={apiKey}\n        required={true}\n        onChange={(e) => setApiKey(e.target.value)}\n      />\n      <input\n        type=\"submit\"\n        style={{\n          border: 'none',\n          fontSize: '0.7rem',\n          backgroundColor: '#3E4245',\n          color: '#757163',\n          height: '35px'\n        }}\n        value=\"Save\"\n      />\n    </form>\n  )\n}\n\nexport default ApiKey\n","import React from 'reactn'\nimport Popup from 'reactjs-popup'\nimport AddCommand from './AddCommand'\nimport ApiKey from './ApiKey'\n\nconst Settings = () => {\n  return (\n    <Popup trigger={<button className=\"settingsButton\">S</button>} modal>\n      {(close) => (\n        <div className=\"settings\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderBottom: '#8ec07c 1px solid',\n              paddingBottom: '5px'\n            }}\n          >\n            <a style={{ fontSize: '1rem' }}>Settings</a>\n            <a style={{ cursor: 'pointer' }} onClick={close}>\n              &times;\n            </a>\n          </div>\n          <div className=\"settingsItems\">\n            <ApiKey />\n            <AddCommand />\n          </div>\n        </div>\n      )}\n    </Popup>\n  )\n}\n\nexport default Settings\n","import React, { useState } from 'reactn'\nimport { sendCommand } from '../Utils'\n\nconst RunCommand = () => {\n  const [command, setCommand] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    await sendCommand(command)\n    setCommand('')\n  }\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      style={{\n        display: 'grid',\n        gap: '5px',\n        gridTemplateColumns: '125px 50px'\n      }}\n    >\n      <input\n        type=\"text\"\n        style={{\n          width: '125px',\n          border: 'none',\n          fontSize: '0.7rem',\n          backgroundColor: '#3E4245',\n          color: '#dfdfdf',\n          textAlign: 'center',\n          height: '45px'\n        }}\n        placeholder=\"Command\"\n        name=\"command\"\n        value={command}\n        required={true}\n        onChange={(e) => setCommand(e.target.value)}\n      />\n      <input\n        type=\"submit\"\n        style={{\n          border: 'none',\n          fontSize: '0.7rem',\n          backgroundColor: '#3E4245',\n          color: '#757163',\n          height: '45px'\n        }}\n        value=\"Run\"\n      />\n    </form>\n  )\n}\nexport default RunCommand\n","import React, { useEffect, useState } from 'reactn'\n\nconst BotInfo = () => {\n  const [data, setData] = useState('')\n\n  useEffect(() => {\n    fetch('/api/info')\n      .then((response) => response.json())\n      .then((data) => setData(data))\n\n    const interval = setInterval(() => {\n      fetch('/api/info')\n        .then((response) => response.json())\n        .then((data) => setData(data))\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const checkStatusCode = (status) => {\n    switch (status) {\n      case 0:\n        return 'Ready'\n      case 1:\n        return 'Connecting'\n      case 2:\n        return 'Reconnecting'\n      case 3:\n        return 'Idle'\n      case 4:\n        return 'Nearly'\n      case 5:\n        return 'Disconnected'\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        alignItems: 'center',\n        gap: '5px',\n        gridTemplateColumns: 'auto auto'\n      }}\n    >\n      <img src={data ? `${data.avatar}` : ''} alt=\"..\" style={{ width: '48px', height: '48px' }} />\n      <span>\n        {data ? `${data.username}` : '..'}\n        <br />\n        {data ? `${checkStatusCode(data.status)} ${data.upTime}` : '..'}\n      </span>\n    </div>\n  )\n}\n\nexport default BotInfo\n","import React from 'reactn'\nimport Settings from './Settings/Settings'\nimport RunCommand from './RunCommand'\nimport BotInfo from './BotInfo'\n\nconst TitleBar = () => {\n  return (\n    <div className=\"TitleBar\">\n      <BotInfo />\n      <Settings />\n      <RunCommand />\n    </div>\n  )\n}\n\nexport default TitleBar\n","import React, { useEffect, useGlobal } from 'reactn'\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport { sendCommand } from '../Utils'\n\nconst CommandButtons = () => {\n  const [commandList, setCommandList] = useGlobal('commandList')\n\n  useEffect(() => {\n    fetch('/api/db/ui')\n      .then((response) => response.json())\n      .then((data) => setCommandList(data))\n  }, [commandList, setCommandList])\n\n  const removeButton = async (id) => {\n    return fetch(`/api/db/ui/rm/${id}`, { method: 'POST' })\n  }\n\n  const renderedButtons = commandList\n    ? commandList.map((item, index) => {\n        const { id, name, command } = item\n        return (\n          <div key={index}>\n            <ContextMenuTrigger id={id}>\n              <button className=\"apiButton\" onClick={async () => await sendCommand(command)}>\n                {name}\n              </button>\n            </ContextMenuTrigger>\n            <ContextMenu id={id}>\n              <MenuItem data={{ foo: 'bar' }} onClick={async () => await removeButton(id)}>\n                Delete\n              </MenuItem>\n            </ContextMenu>\n          </div>\n        )\n      })\n    : 'No shortcut commands set. Please add one below.'\n\n  return <div className=\"apiButtons\">{renderedButtons}</div>\n}\n\nexport default CommandButtons\n","import React from 'reactn'\n\nimport TitleBar from '../TitleBar/TitleBar'\nimport CommandButtons from '../CommandButtons/CommandButtons'\n\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TitleBar />\n      <CommandButtons />\n      <ToastContainer closeButton={false} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'reactn'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
{"version":3,"sources":["components/TitleBar/TitleBar.js","components/CommandButtons/CommandButtons.js","components/CommandButtons/AddCommand.js","components/App/App.js","index.js"],"names":["TitleBar","useState","data","setData","command","setCommand","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","transition","Flip","useEffect","fetch","then","response","json","interval","setInterval","clearInterval","handleSubmit","e","a","preventDefault","method","headers","body","JSON","stringify","style","display","alignItems","gap","gridTemplateColumns","src","avatar","alt","width","height","username","status","checkStatusCode","upTime","autoComplete","onSubmit","type","border","fontSize","backgroundColor","color","textAlign","placeholder","name","value","required","onChange","target","CommandButtons","useGlobal","commandList","setCommandList","sendCommand","removeButton","id","renderedButtons","map","item","index","key","onClick","foo","closeButton","AddCommand","commandName","setCommandName","paddingBottom","padding","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbffda40.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'reactn'\nimport { toast, Flip } from 'react-toastify'\n\nconst TitleBar = () => {\n  const [data, setData] = useState('')\n  const [command, setCommand] = useState('')\n\n  const notify = (message) =>\n    toast(message, {\n      position: 'bottom-center',\n      autoClose: 4000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      className: 'toast',\n      transition: Flip\n    })\n\n  useEffect(() => {\n    fetch('/api/info')\n      .then((response) => response.json())\n      .then((data) => setData(data))\n\n    const interval = setInterval(() => {\n      fetch('/api/info')\n        .then((response) => response.json())\n        .then((data) => setData(data))\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const checkStatusCode = (status) => {\n    switch (status) {\n      case 0:\n        return 'Ready'\n      case 1:\n        return 'Connecting'\n      case 2:\n        return 'Reconnecting'\n      case 3:\n        return 'Idle'\n      case 4:\n        return 'Nearly'\n      case 5:\n        return 'Disconnected'\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    try {\n      const response = await fetch('/api/commands', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ command: command })\n      })\n      const data = await response.json()\n      setCommand('')\n      return notify(data.response)\n    } catch {\n      return notify('There was an error connecting.')\n    }\n  }\n\n  return (\n    <div className=\"TitleBar\">\n      <div\n        style={{\n          display: 'grid',\n          alignItems: 'center',\n          gap: '5px',\n          gridTemplateColumns: 'auto auto'\n        }}\n      >\n        <img\n          src={data ? `${data.avatar}` : ''}\n          alt=\"..\"\n          style={{ width: '48px', height: '48px' }}\n        />\n        <span>\n          {data ? `${data.username}` : '..'}\n          <br />\n          {data ? `${checkStatusCode(data.status)} ${data.upTime}` : '..'}\n        </span>\n      </div>\n\n      <form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        style={{\n          display: 'grid',\n          gap: '5px',\n          gridTemplateColumns: '125px 50px'\n        }}\n      >\n        <input\n          type=\"text\"\n          style={{\n            width: '125px',\n            border: 'none',\n            fontSize: '0.7rem',\n            backgroundColor: '#3E4245',\n            color: '#757163',\n            textAlign: 'center',\n            height: '45px'\n          }}\n          placeholder=\"Command\"\n          name=\"command\"\n          value={command}\n          required={true}\n          onChange={(e) => setCommand(e.target.value)}\n        />\n        <input\n          type=\"submit\"\n          style={{\n            border: 'none',\n            fontSize: '0.7rem',\n            backgroundColor: '#3E4245',\n            color: '#757163',\n            height: '45px'\n          }}\n          value=\"Run\"\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default TitleBar\n","import React, { useEffect, useGlobal } from 'reactn'\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport { ToastContainer, toast, Flip } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst CommandButtons = () => {\n  const [commandList, setCommandList] = useGlobal('commandList')\n\n  useEffect(() => {\n    fetch('/api/db/ui')\n      .then((response) => response.json())\n      .then((data) => setCommandList(data))\n  }, [])\n\n  const notify = (message) =>\n    toast(message, {\n      position: 'bottom-center',\n      autoClose: 4000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      className: 'toast',\n      transition: Flip\n    })\n\n  const sendCommand = async (command) => {\n    try {\n      const response = await fetch('/api/commands', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ command })\n      })\n      const data = await response.json()\n      return notify(data.response)\n    } catch {\n      return notify('There was an error connecting.')\n    }\n  }\n  const removeButton = async (id) => {\n    return fetch(`/api/db/ui/rm/${id}`, { method: 'POST' })\n  }\n\n  const renderedButtons = commandList\n    ? commandList.map((item, index) => {\n        const { id, name, command } = item\n        return (\n          <div key={index}>\n            <ContextMenuTrigger id={id}>\n              <button className=\"apiButton\" onClick={async () => await sendCommand(command)}>\n                {name}\n              </button>\n            </ContextMenuTrigger>\n            <ContextMenu id={id}>\n              <MenuItem data={{ foo: 'bar' }} onClick={async () => await removeButton(id)}>\n                Delete\n              </MenuItem>\n            </ContextMenu>\n          </div>\n        )\n      })\n    : 'No shortcut commands set. Please add one below.'\n\n  return (\n    <div className=\"apiButtons\">\n      {renderedButtons}\n      <ToastContainer closeButton={false} />\n    </div>\n  )\n}\n\nexport default CommandButtons\n","import React, { useState } from 'reactn'\n\nconst AddCommand = () => {\n  const [commandName, setCommandName] = useState('')\n  const [command, setCommand] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    fetch('/api/db/ui', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify([commandName, command])\n    })\n\n    setCommand('')\n    setCommandName('')\n  }\n\n  return (\n    <div>\n      <form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        style={{\n          display: 'grid',\n          gap: '5px',\n          gridTemplateColumns: '150px 150px 50px',\n          paddingBottom: '5px'\n        }}\n      >\n        <input\n          type=\"text\"\n          style={{\n            width: '150px',\n            border: 'none',\n            fontSize: '0.7rem',\n            backgroundColor: '#3E4245',\n            color: '#757163',\n            textAlign: 'center',\n            height: '20px'\n          }}\n          placeholder=\"Name\"\n          name=\"commandName\"\n          value={commandName}\n          required={true}\n          onChange={(e) => setCommandName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          style={{\n            width: '150px',\n            border: 'none',\n            fontSize: '0.7rem',\n            backgroundColor: '#3E4245',\n            color: '#757163',\n            textAlign: 'center',\n            height: '20px'\n          }}\n          placeholder=\"Command\"\n          name=\"command\"\n          value={command}\n          required={true}\n          onChange={(e) => setCommand(e.target.value)}\n        />\n        <input\n          type=\"submit\"\n          style={{\n            border: 'none',\n            fontSize: '0.7rem',\n            padding: '0px 5px',\n            backgroundColor: '#3E4245',\n            color: '#757163',\n            height: '20px'\n          }}\n          value=\"+\"\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default AddCommand\n","import React from 'reactn'\nimport TitleBar from '../TitleBar/TitleBar'\nimport CommandButtons from '../CommandButtons/CommandButtons'\nimport AddCommand from '../CommandButtons/AddCommand'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TitleBar />\n      <CommandButtons />\n      <AddCommand />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'reactn'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}